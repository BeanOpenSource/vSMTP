name: Pre-Release
on:
  pull_request:
    branches:
      - "main"
      - "staging"

permissions:
  contents: read

jobs:
  check-bump:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo ${{ github.event.pull_request.labels.*.name }}
          if ${{ contains(github.event.pull_request.labels.*.name, 'B-candidate') }}; then
            echo "BUMP=rc" >> $GITHUB_OUTPUT
          elif ${{ contains(github.event.pull_request.labels.*.name, 'B-release') }}; then
            echo "BUMP=release" >> $GITHUB_OUTPUT
          elif ${{ contains(github.event.pull_request.labels.*.name, 'B-patch') }}; then
            echo "BUMP=patch" >> $GITHUB_OUTPUT
          elif ${{ contains(github.event.pull_request.labels.*.name, 'B-minor') }}; then
            echo "BUMP=minor" >> $GITHUB_OUTPUT
          elif ${{ contains(github.event.pull_request.labels.*.name, 'B-major') }}; then
            echo "BUMP=major" >> $GITHUB_OUTPUT
          else
            exit 1
          fi
        id: get-bump-method
      - run: echo ${{ steps.get-bump-method.outputs.BUMP }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-release@0.24.2
      - run: cargo release ${{ steps.get-bump-method.outputs.BUMP }} --workspace --allow-branch "HEAD"
  check-cargo-pkg:
    strategy:
      fail-fast: false
      matrix:
        include:
          - path: "src/vsmtp/vsmtp-mail-parser"
          - path: "src/vsmtp/vsmtp-auth"
          - path: "src/vsmtp/vsmtp-common"
          - path: "src/vqueue"
          - path: "src/vsmtp/vsmtp-rule-engine"
          - path: "src/vsmtp/vsmtp-delivery"
          - path: "src/vsmtp/vsmtp-protocol"
          - path: "src/vsmtp/vsmtp-server"
          - path: "src/vsmtp/vsmtp-core"
          - path: "src/vsmtp/plugins/vsmtp-plugin-vsl"
          - path: "src/plugins/vsmtp-plugin-csv"
          - path: "src/plugins/vsmtp-plugin-mysql"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - run: cargo package --manifest-path ${{ matrix.path }}/Cargo.toml
  check-deb-pkg:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            host_os: ubuntu-20.04
          - target: x86_64-unknown-linux-gnu
            host_os: ubuntu-22.04
          - target: aarch64-unknown-linux-gnu
            host_os: ubuntu-20.04
          - target: aarch64-unknown-linux-gnu
            host_os: ubuntu-22.04
    continue-on-error: true
    runs-on: ${{ matrix.host_os }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "asset name will be"
          if [ ${{ matrix.target }} == 'aarch64-unknown-linux-gnu' ]; then
            suffix="arm64"
          else
            suffix="amd64"
          fi
          os_version=${${{ matrix.host_os }}//-/}
          echo "vsmtp_${{ needs.create-release.outputs.release_version }}+${os_version}_${suffix}.deb"
      - if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: |
          sudo apt-get update && sudo apt-get install -y \
            gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu
      - run: |
          git clone https://github.com/viridIT/cargo-deb.git
          cd cargo-deb
          git checkout fix/changelog-path
          cargo build
          cd ..
      - run: rustup target add ${{ matrix.target }}
      - if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: |
          cat > ~/.cargo/config <<EOF
          [target.${{ matrix.target }}]
          strip = { path = "aarch64-linux-gnu-strip" }
          EOF
          ./cargo-deb/target/debug/cargo-deb -p vsmtp -v --target=${{ matrix.target }}
        env:
          TARGET_CC: aarch64-linux-gnu-gcc
          TARGET_AR: aarch64-linux-gnu-gcc-ar
          RUSTFLAGS: "--cfg procmacro2_semver_exempt -C linker=aarch64-linux-gnu-gcc"
      - if: ${{ matrix.target != 'aarch64-unknown-linux-gnu' }}
        run: ./cargo-deb/target/debug/cargo-deb -p vsmtp -v --target=${{ matrix.target }}
        env:
          # see https://github.com/atanunq/viu/issues/68
          RUSTFLAGS: "--cfg procmacro2_semver_exempt"
      - run: sudo apt-get update && sudo apt-get install -y lintian
      - run: lintian ./target/${{ matrix.target }}/debian/*.deb
  check-docker-build:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - name: Build, tag, and push
        uses: docker/build-push-action@v3.2.0
        with:
          tags: "viridit/vsmtp:testing"
          platforms: linux/amd64,linux/arm64
          file: ./docker/Dockerfile
